version: '3.8'

services:
  # Main application
  luma-payments-api:
    build: .
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - APPLE_MERCHANT_ID=${APPLE_MERCHANT_ID}
      - APPLE_DOMAIN_NAME=${APPLE_DOMAIN_NAME}
      - GOOGLE_MERCHANT_ID=${GOOGLE_MERCHANT_ID}
      - BRAINTREE_MERCHANT_ID=${BRAINTREE_MERCHANT_ID}
      - BRAINTREE_PUBLIC_KEY=${BRAINTREE_PUBLIC_KEY}
      - BRAINTREE_PRIVATE_KEY=${BRAINTREE_PRIVATE_KEY}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - redis
      - postgres
    volumes:
      - ./logs:/app/logs
      - ./certs:/app/certs
    restart: unless-stopped
    networks:
      - luma-network

  # PostgreSQL database (for production)
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=luma_payments
      - POSTGRES_USER=${DB_USER:-luma}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-luma_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - luma-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - luma-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/nginx/certs
    depends_on:
      - luma-payments-api
    restart: unless-stopped
    networks:
      - luma-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - luma-network

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - luma-network

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  luma-network:
    driver: bridge 